
========================================================================
在大语言模型的实际应用中，推理优化是提升模型推理效率的关键环节。其中，"KV Cache 池化" 是一种重要的优化技术。现在，你的任务是进行深入透彻的分析，清晰地解释在大语言模型推理优化里，"KV Cache 池化" 到底是什么。并且，要以国内小学生都能理解的方式来讲解 "KV Cache 池化" 的本质及原理，同时通过举出贴近生活、容易理解的具体例子来更好地辅助说明。
========================================================================

========================================================================
你是 Python 语言程序设计领域的高级专家，尤其擅长编程、数据结构与算法、具体的 Python 程序调试。

现在，你的任务是首先仔细分析以下 Python 代码，并详细解析代码实现的具体功能是什么？以及代码实际解决了怎样的问题？接下来，逐行逐段解释整个代码的具体实现，包括每一条语句的作用和它们是如何协同工作的。然后，仔细检查代码的实现逻辑是否完全准确？这包括检查代码是否能正确处理各种可能的输入情况，是否存在逻辑漏洞或编程错误。最后，分析代码是否能被进一步优化，并给出优化后的更准确且优雅的代码实现。在优化时，要考虑代码的可读性、性能和可维护性。
========================================================================

========================================================================
你的任务是编写出一个完整、可靠的 Python 程序，实现在中英文混排时，需要在英文字母、数字和符号两侧添加空格，以使文本排版更加美观。这个程序有 while True: 循环， 运行这个 Python 程序会提示用户输入原始文本内容，处理后返回排版后的文本内容，直到用户输入 "exit" 或 "q" 才结束程序。要求像素级实现前述要求，最后输出完整代码并且带有详细注释。
必须仔细查阅并使用 Python 的第三方库 pangu，(https://github.com/vinta/pangu.py) 为了更好的可读性，实现强迫症级的文本空格功能，自动在 CJK（中文、日文、韩文）与半角字符（字母、数字、符号）之间插入空格。pangu 库的使用示例如下所示：  
```
!pip install -U pangu
import pangu

new_text = pangu.spacing_text('在VScode中添加Linux中的Docker容器中的Python解释器')
print(new_text)
# new_text = '在 VScode 中添加 Linux 中的 Docker 容器中的 Python 解释器'
```
========================================================================

